rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function belongsToCompany(companyId) {
      return isSignedIn() && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.companyId == companyId;
    }

    // Company folders
    match /{companyId}/{allPaths=**} {
      allow read: if belongsToCompany(companyId);
      allow create: if belongsToCompany(companyId) 
        && request.resource.size < 10 * 1024 * 1024 // 10MB max file size
        && (
          // Allow only specific file types
          request.resource.contentType.matches('image/.*') ||
          request.resource.contentType.matches('application/pdf') ||
          request.resource.contentType.matches('application/msword') ||
          request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document')
        );
      allow update: if belongsToCompany(companyId);
      allow delete: if belongsToCompany(companyId);
    }
  }
}